/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto.suso.caceres;

/**
 *
 * @author Contingencia
 */
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

import org.graphstream.graph.*;
import org.graphstream.graph.implementations.*;
import org.graphstream.ui.view.*;
import org.graphstream.graph.Node;
        
public class Interfaz extends javax.swing.JFrame {
    
    Grafo grafo;
    Graph grafoDibujo;
    
    /**
     * Creates new form Interface
     */
    public Interfaz() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Text Files","txt");
        fileChooser.setFileFilter(filter);
        newUserError.setVisible(false);
        newRelationError.setVisible(false);

        loadFile("src/Txt/data.txt");
        updateUsers();
    }
    
    // Carga nodos y relaciones del txt
    private void loadFile(String filename){
        Lista lista = new Lista<>();
        grafo = new Grafo(lista);
        try {
            File in = new File(filename);
            Scanner lector = new Scanner(in);
            String linea = lector.nextLine();
            if (linea.equals("usuarios")){
                linea = lector.nextLine();
                while (!linea.equals("relaciones") ) { 
                    grafo.addUser(linea);
                    linea = lector.nextLine();
                }
                while (lector.hasNextLine()) {
                    linea = lector.nextLine();
                    String[] relacion = linea.split(", ");
                    grafo.addFriend(relacion[0], relacion[1]);
                }
            }
            lector.close();
        } catch (FileNotFoundException e) {
            System.out.println("Archivo Inv√°lido");
        }
    }
    
    // Colorea el grafo segun lo fuerte que sea la conexion
    private void colorGrafo(){
        String[] componentes = grafo.findSCC().split("\n");
        int n = componentes.length;
        
        // Genera e imprime numeros espaciados equitativamente
        int interval = 255 / (n - 1);
        for (int i = 0; i < n; i++) {
            int num = i * interval;
            
            String nodes[] = componentes[i].split(" ");
            int m = nodes.length;
            for(int j=0; j < m; j++){
                int indexNode = Integer.parseInt(nodes[j]);
                String name = grafo.getUsers().get(indexNode).getName();
                Node node = grafoDibujo.getNode(name);
                node.setAttribute("ui.style", 
                    "fill-color: rgb(0," + Integer.toString(num) + "," + Integer.toString(num) + ");");
            }
        }
    }
    
    // Crea una venta con el grafo
    private void initGraph(){
        System.setProperty("org.graphstream.ui", "swing");
        
        grafoDibujo = new SingleGraph("Red Social");
        grafoDibujo.setAttribute("ui.stylesheet", "node{ fill-color: black; size:30; text-background-mode: plain;}");
        grafoDibujo.setAttribute("ui.antialias");
        
        Nodo<User> aux = grafo.getUsers().getpFirst();
        while (aux != null) {
            Node n = grafoDibujo.addNode(aux.getData().getName());
            n.setAttribute("ui.label", aux.getData().getName());
            
            n.setAttribute("xy", 0, 0);
            n.setAttribute("xy", 1, 1);

            aux = aux.getpNext();
        }

        aux = grafo.getUsers().getpFirst();
        while (aux != null) {
            Nodo<User> friend = aux.getData().getFriends().getpFirst();
            while(friend != null){
                grafoDibujo.addEdge(aux.getData().getName()+friend.getData().getName(), aux.getData().getName(), friend.getData().getName(), true);
                friend = friend.getpNext();
            }
            aux = aux.getpNext();
        }
        
        Viewer viewer = grafoDibujo.display();
        viewer.setCloseFramePolicy(Viewer.CloseFramePolicy.HIDE_ONLY);
        
        colorGrafo();
    }
    
    // Actualiza los usuarios
    private void updateUsers(){
        Nodo<User> aux = grafo.getUsers().getpFirst();
        while(aux != null){
            String name = aux.getData().getName();
            userList.addItem(name);
            userList1.addItem(name);
            userList2.addItem(name);
            aux = aux.getpNext();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        dialogSave = new javax.swing.JDialog();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        load = new javax.swing.JButton();
        userList = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nameNewUser = new javax.swing.JTextField();
        agregar = new javax.swing.JToggleButton();
        eliminar = new javax.swing.JButton();
        save = new javax.swing.JButton();
        newUserError = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        agregar1 = new javax.swing.JToggleButton();
        userList1 = new javax.swing.JComboBox<>();
        userList2 = new javax.swing.JComboBox<>();
        newRelationError = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        jLabel6.setText("Recuerde guardar los datos del grafo anterior !");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("IMPORTANTE");

        jButton2.setText("Continuar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Cerrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dialogSaveLayout = new javax.swing.GroupLayout(dialogSave.getContentPane());
        dialogSave.getContentPane().setLayout(dialogSaveLayout);
        dialogSaveLayout.setHorizontalGroup(
            dialogSaveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogSaveLayout.createSequentialGroup()
                .addGroup(dialogSaveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dialogSaveLayout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(jLabel7))
                    .addGroup(dialogSaveLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(dialogSaveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(dialogSaveLayout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2))
                            .addComponent(jLabel6))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        dialogSaveLayout.setVerticalGroup(
            dialogSaveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogSaveLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dialogSaveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap(15, Short.MAX_VALUE))
        );


        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        load.setText("Cargar Archivo");
        load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Eliminar Usuarios");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Agregar Usuario");

        nameNewUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameNewUserActionPerformed(evt);
            }
        });

        agregar.setText("Agregar");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        eliminar.setText("Eliminar");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        save.setText("Actualizar Repositorio");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });


        newUserError.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        newUserError.setForeground(new java.awt.Color(255, 0, 0));
        newUserError.setText("Este usuario ya existe");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Archivos");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Grafo");


        agregar1.setText("Agregar");
        agregar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar1ActionPerformed(evt);
            }
        });

        userList2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userList2ActionPerformed(evt);
            }
        });

        newRelationError.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        newRelationError.setForeground(new java.awt.Color(255, 0, 0));
        newRelationError.setText("Esta relacion ya existe");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Agregar Relaci√≥n");

        jButton3.setText("Ver Grafo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(load)
                                .addGap(43, 43, 43)
                                .addComponent(save))
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addGap(38, 71, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(userList1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(userList2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(nameNewUser, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(userList, 0, 329, Short.MAX_VALUE))
                            .addComponent(jLabel2)
                            .addComponent(newUserError)
                            .addComponent(jLabel4)
                            .addComponent(newRelationError))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(agregar1)
                                    .addComponent(eliminar)))
                            .addComponent(agregar, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 299, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(load)
                    .addComponent(save))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameNewUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(agregar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newUserError, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eliminar))
                .addGap(12, 12, 12)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregar1)
                    .addComponent(userList1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userList2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newRelationError, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))

        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadActionPerformed
        if(grafo != null){
            dialogSave.pack();
            dialogSave.setLocationRelativeTo(null);
            dialogSave.setResizable(false);
            dialogSave.setVisible(true);
        } else {
            if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                String filename = fileChooser.getSelectedFile().getAbsolutePath();
                loadFile(filename);
                updateUsers();
            }
        }
        
    }//GEN-LAST:event_loadActionPerformed

    private void nameNewUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameNewUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameNewUserActionPerformed

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        String newUser = nameNewUser.getText();
        if (!newUser.startsWith("@")) {
            // If not, add "@" at the beginning
            newUser = "@" + newUser;
        }
       
        boolean added = grafo.addUser(newUser);
        nameNewUser.setText("");
        
        if(added){
            newUserError.setVisible(false);
            updateUsers();

           
            Node n =  grafoDibujo.addNode(newUser);
            n.setAttribute("ui.label", newUser);
            n.setAttribute("xy", 0, 0);
            n.setAttribute("xy", 1, 1);
            colorGrafo();
        }else {
            newUserError.setVisible(true);
        }
    }//GEN-LAST:event_agregarActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        String user = String.valueOf(userList.getSelectedItem());
        boolean removed = grafo.EliminarUser(user);
        if(removed){
            userList.removeItem(user);
            userList1.removeItem(user);
            userList2.removeItem(user);
            grafoDibujo.removeNode(user);
            colorGrafo();
        }
    }//GEN-LAST:event_eliminarActionPerformed

    private void agregar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar1ActionPerformed
        String user1 = String.valueOf(userList1.getSelectedItem());
        String user2 = String.valueOf(userList2.getSelectedItem());
        if(user1.equals(user2)){
            newRelationError.setText("Un usuario no puede ser su propio amigo");
            newRelationError.setVisible(true);
            return;
        }
        boolean added = grafo.addFriend(user1, user2);
        if(added){
            newRelationError.setVisible(false);
            grafoDibujo.addEdge(user1+user2, user1, user2, true);
            colorGrafo();

        } else{
            newRelationError.setText("Esta relaci√≥n ya existe");
            newRelationError.setVisible(true);
        }      
    }//GEN-LAST:event_agregar1ActionPerformed

    private void userList2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userList2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userList2ActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            String filename = fileChooser.getSelectedFile().getAbsolutePath();
            grafo.GuardarArchivo(filename);
        }
    }//GEN-LAST:event_saveActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dialogSave.setVisible(false);
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            String filename = fileChooser.getSelectedFile().getAbsolutePath();
            loadFile(filename);
            updateUsers();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dialogSave.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        initGraph();
    }//GEN-LAST:event_jButton3ActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton agregar;
    private javax.swing.JToggleButton agregar1;
    private javax.swing.JDialog dialogSave;
    private javax.swing.JButton eliminar;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton load;
    private javax.swing.JTextField nameNewUser;
    private javax.swing.JLabel newRelationError;
    private javax.swing.JLabel newUserError;
    private javax.swing.JButton save;
    private javax.swing.JComboBox<String> userList;
    private javax.swing.JComboBox<String> userList1;
    private javax.swing.JComboBox<String> userList2;
    // End of variables declaration//GEN-END:variables
}
